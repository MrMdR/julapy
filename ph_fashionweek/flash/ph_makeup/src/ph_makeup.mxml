<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="576" height="1024" frameRate="25" windowComplete="init()">

    <mx:Script>
        <![CDATA[
        	import com.julapy.ph.makeup.model.ModelLocator;
        	import com.holler.assets.AssetGroupVOEvent;
        	import com.julapy.ph.makeup.view.ApplicationView;
        	import com.julapy.core.StageSizeEvent;
        	import com.julapy.core.StageSize;
        	import com.holler.assets.AssetLoader;

			private var asset		: MovieClip;

			private var stageWidth	: int;
			private var stageHeight	: int;

			private var app			: ApplicationView;

			private function init ():void
			{
				nativeWindow.x		= 100;
				nativeWindow.y		= -1200;
				nativeWindow.width	= ModelLocator.getInstance().makeupModel.appWidth;
				nativeWindow.height	= ModelLocator.getInstance().makeupModel.appHeight;

				StageSize.getInstance().stage = stage;
				StageSize.getInstance().addEventListener( StageSizeEvent.RESIZE, stageResizeHandler );

				stageWidth	= stage.stageWidth;
				stageHeight	= stage.stageHeight;

				AssetLoader.USE_SIZE_SCRIPT = false;
				var assetLoader : AssetLoader;
				assetLoader = AssetLoader.getInstance();
				assetLoader.addEventListener( AssetGroupVOEvent.ASSET_GROUP_COMPLETE,	assetLoaderHandler );
				assetLoader.addAsset( "assets.swf",				"assets",	"main" 		);
				assetLoader.addAsset( "assets_video_01.swf",	"assets",	"video_01"	);
				assetLoader.addAsset( "assets_video_02.swf",	"assets",	"video_02"	);
				assetLoader.addAsset( "assets_video_03.swf",	"assets",	"video_03"	);
				assetLoader.loadAssets( "assets", false );
			}

			private function initApp ():void
			{
				asset = AssetLoader.getInstance().getClassInstance( "makeup.asset" ) as MovieClip;
				stage.addChild( asset );

				app = new ApplicationView( asset.getChildByName( "main" ) as MovieClip );

				stageResize( stage.stageWidth, stage.stageHeight );
			}

			private function assetLoaderHandler ( e : AssetGroupVOEvent ):void
			{
				initApp();
			}

			private function stageResizeHandler ( e : StageSizeEvent ):void
			{
				stageResize( e.stageWidth, e.stageHeight );
			}

			private function stageResize ( stageWidth : int, stageHeight : int ):void
			{
				this.stageWidth		= stage.stageWidth;
				this.stageHeight	= stage.stageHeight;

				asset.x		= (int)( stageWidth  * 0.5 );
				asset.y		= (int)( stageHeight * 0.5 );
			}

        ]]>
    </mx:Script>

</mx:WindowedApplication>
